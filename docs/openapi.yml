openapi: '3.0.2'
info:
  title: Infominer API
  version: '0.1'
servers:
  - url: http://infominer.ijs.si/api/v1/

tags:
  - name: Dataset
    description: "
      The API for creating, retrieving, and modifying datasets.
    "
  - name: Method
    description: "
      The API for executing, updating, and retrieving method records.
    "
  - name: Subset
    description: "
      The API for creating, updating, and retrieving subset records.
    "
  - name: Document
    description: "
      The API for retrieving, and updating documents records.
    "
  - name: DatasetModel
    x-displayName: The Dataset Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Dataset" />

  - name: SubsetModel
    x-displayName: The Subset Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Subset" />

x-tagGroups:
  - name: General
    tags:
      - Dataset
      - Method
      - Subset
      - Document
  - name: Models
    tags:
      - DatasetModel
      - SubsetModel

paths:

  # =============================================
  # DATASET ROUTES
  # =============================================

  /datasets:
    get:
      tags:
        - Dataset
      summary: "Get all datasets"
      description: "Gets all of the owner datasets."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  datasets:
                    type: array
                    items:
                      $ref: "#/components/schemas/Dataset"
                    description: "The array of datasets."
    post:
      tags:
        - Dataset
      summary: "Upload a dataset file"
      description: "
        Uploads a dataset file (.csv) with with the following structure: \n

        - **Header.** The first line contains the names of the data columns.\n

        - **Rows.** The reminder of the lines contain the row values. \n

        Both the header and row values are separated by a delimiter. **Supported delimiters:**
        comma, semicolon, pipe, and tilde.
        "
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  description: "The dataset file."
              required:
              - file

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetadata"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"

  /datasets/{datasetId}:
    parameters:
      - in: path
        name: datasetId
        schema:
          type: integer
          minimum: 1
        required: true
        description: "The dataset ID."
    post:
      tags:
        - Dataset
      summary: "Create a dataset"
      description: "Uploads the file metadata to create a new dataset."

      parameters:
        - in: path
          name: datasetId
          schema:
            type: integer
            minimum: 1
          required: true
          description: "
            The dataset ID provided by the [\"Upload a dataset file\"](#/paths/~1datasets/post)
            route.
          "
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileMetadatUpload"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset:
                    type: object
                    description: "The dataset metadata."
                    properties:
                      id:
                        type: integer
                        format: int32
                        minimum: 1
                        description: "
                          The dataset ID. Used to check the dataset status via the
                          [\"Check the dataset upload status\"](#/paths/~1datasets~1{datasetId}~1status/get)
                          route.
                        "

    get:
      tags:
        - Dataset
      summary: "Get the dataset"
      description: "
        Gets the dataset metadata as well as all subset and methods metadata that are currently
        in the dataset analysis.
      "
      responses:
        '200':
          description: OK
    put:
      tags:
        - Dataset
      summary: "Update the dataset"
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Dataset
      summary: "Delete the dataset"
      responses:
        '200':
          description: OK

  /datasets/{datasetId}/status:
    parameters:
      - in: path
        name: datasetId
        schema:
          type: integer
          minimum: 1
        required: true
        description: "The dataset ID."
    get:
      tags:
        - Dataset
      summary: "Check the dataset upload status"
      description: "Checks and gets all of the dataset metadata, including its status."

      responses:
        '200':
          description: OK


  # =============================================
  # METHOD ROUTES
  # =============================================

  /datasets/{datasetId}/methods:
    parameters:
      - in: path
        name: datasetId
        schema:
          type: integer
          minimum: 1
        required: true
        description: "The dataset ID."
    get:
      tags:
        - Method
      summary: "Get all methods"
      responses:
        '200':
          description: OK

    post:
      tags:
        - Method
      summary: "Execute a method"
      responses:
        '200':
          description: OK

  /datasets/{datasetId}/methods/{methodId}:
    parameters:
      - in: path
        name: datasetId
        schema:
          type: integer
          minimum: 1
        required: true
        description: "The dataset ID."
      - in: path
        name: methodId
        schema:
          type: integer
          minimum: 0
        required: true
        description: "The method ID."

    get:
      tags:
        - Method
      summary: "Get the method"
      responses:
        '200':
          description: OK

    put:
      tags:
        - Method
      summary: "Update the method"
      responses:
        '200':
          description: OK

    delete:
      tags:
        - Method
      summary: "Delete the method"
      responses:
        '200':
          description: OK

  /datasets/{datasetId}/methods/{methodId}/status:
    parameters:
      - in: path
        name: datasetId
        schema:
          type: integer
          minimum: 1
        required: true
        description: "The dataset ID."
      - in: path
        name: methodId
        schema:
          type: integer
          minimum: 0
        required: true
        description: "The method ID."

    get:
      tags:
        - Method
      summary: "Check the method creation status"

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"

  # =============================================
  # SUBSET ROUTES
  # =============================================

  /datasets/{datasetId}/subsets:
    parameters:
      - in: path
        name: datasetId
        schema:
          type: integer
          minimum: 1
        required: true
        description: "The dataset ID."

    get:
      tags:
        - Subset
      summary: "Get all subsets"
      description: "
        Gets all subsets that were generated but not deleted during the dataset
        analysis.
      "

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subsets:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subset"
                    description: "The array of subsets."

    post:
      tags:
        - Subset
      summary: "Create a subset"
      parameters:
        - in: path
          name: datasetId
          schema:
            type: integer
            minimum: 1
          required: true
          description: "The dataset ID."
      responses:
        '200':
          description: OK

  /datasets/{datasetId}/subsets/{subsetId}:
    parameters:
      - in: path
        name: datasetId
        schema:
          type: integer
          minimum: 1
        required: true
        description: "The dataset ID."
      - in: path
        name: subsetId
        schema:
          type: integer
          minimum: 0
        required: true
        description: "The subset ID."
    get:
      tags:
        - Subset
      summary: "Get a subset"
      responses:
        '200':
          description: OK

    put:
      tags:
        - Subset
      summary: "Update a subset"
      responses:
        '200':
          description: OK

    delete:
      tags:
        - Subset
      summary: "Delete a subset"
      responses:
        '200':
          description: OK

  /datasets/{datasetId}/subsets/{subsetId}/download:
    parameters:
        - in: path
          name: datasetId
          schema:
            type: integer
            minimum: 1
          required: true
          description: "The dataset ID."
        - in: path
          name: subsetId
          schema:
            type: integer
            minimum: 0
          required: true
          description: "The subset ID."
    get:
      tags:
        - Subset
      summary: "Download a subset"
      responses:
        '200':
          description: OK
          content:
            multipart/form-data:
              schema:
                type: string
                format: binary
                description: "
                  The file containing the subset documents in a csv format. Can be
                  again uploaded via [\"Upload a dataset file\"](#/paths/~1datasets/post)
                  route.
                "

  # =============================================
  # DOCUMENT ROUTES
  # =============================================

  /datasets/{datasetId}/documents:
    parameters:
        - in: path
          name: datasetId
          schema:
            type: integer
            minimum: 1
          required: true
          description: "The dataset ID."
    get:
      tags:
        - Document
      summary: "Get some documents"

      responses:
        '200':
          description: OK

  /datasets/{datasetId}/documents/{documentId}:
    parameters:
        - in: path
          name: datasetId
          schema:
            type: integer
            minimum: 1
          required: true
          description: "The dataset ID."
        - in: path
          name: documentId
          schema:
            type: integer
            minimum: 0
          required: true
          description: "The document ID."
    get:
      tags:
        - Document
      summary: "Get a document"
      responses:
        '200':
          description: OK

    put:
      tags:
        - Document
      summary: "Update a document"
      responses:
        '200':
          description: OK


# =============================================
# COMPONENTS
# =============================================

components:
  schemas:

    # =============================================
    # ERROR SCHEMAS
    # =============================================

    Error:
      type: object
      properties:
        message:
          type: string
          description: "The error message."
        code:
          type: integer
          format: "int32"
          description: "The error status code."

    BadRequest:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            message:
              default: "Bad Request"
            code:
              default: 400

    UserNotAuthorized:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            message:
              default: "User Not Authorized"
            code:
              default: 401

    RouteNotFound:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            message:
              default: "Route Not Found"
            code:
              default: 404

    ServerError:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            message:
              default: "Server Side Error"
            code:
              default: 500

    # =============================================
    # UPLOAD SCHEMAS
    # =============================================

    FileMetadata:
      type: object
      properties:
        dataset:
          type: object
          description: "The file metadata."
          properties:
            id:
              type: integer
              minimum: 1
              example: 10
              description: "The dataset ID."

            filename:
              type: string
              example: "secret-file.csv"
              description: "The uploaded file name."

            delimiter:
              type: string
              example: ";"
              description: "The identified delimiter."

            fields:
              type: array
              items:
                $ref: "#/components/schemas/Field"
              description: "The identified fields in the file."

            metadata:
              type: object
              description: "The metadata available for selection."
              properties:
                types:
                  type: array
                  items:
                    type: string
                    enum: ["number", "text", "class", "category", "datetime"]
                  example: ["number", "text", "class", "category", "datetime"]
                  description: "Possible field types."
                stopwords:
                  type: object
                  description: "The stopwords metadata."
                  properties:
                    languages:
                      type: array
                      example: [
                        { label: "English", value: "en" },
                        { label: "German", value: "de" },
                        { label: "Slovene", value: "si" },
                        { label: "Spanish", value: "es" },
                        { label: "None", value: "none" },
                      ]
                      items:
                        type: object
                        properties:
                          label:
                            type: string
                            description: "The full name of the language."
                          value:
                            type: string
                            minLength: 2
                            maxLength: 2
                            description: "The language value."
                      description: "The array of all infominer supported stopwords."

    FileMetadatUpload:
      type: object
      properties:
        dataset:
          type: object
          description: "The dataset metadata."
          properties:
            name:
              type: string
              example: "Top Secret"
              description: "The dataset name."

            description:
              type: string
              nullable: true
              example: "This dataset contains top secret information."
              description: "The dataset description."

            parameters:
              type: object
              description: "The parameters used across the whole dataset analysis."
              properties:
                stopwords:
                  type: object
                  nullable: true
                  description: "The stopwords configuration."

                  properties:
                    language:
                      type: string
                      minLength: 2
                      maxLength: 2
                      nullable: true
                      example: "en"
                      description: "
                        The language value. This should be one of the language
                        values in the **dataset.metadata.stopwords.languages**
                        attribute of the [\"Upload a dataset file\"](#/paths/~1datasets/post)
                        route.
                      "

                    words:
                      type: array
                      nullable: true
                      items:
                        type: string
                      example: ["top", "secret"]
                      description: "The array of specific stopwords to ignore."

            fields:
              type: array
              description: "
                The selected fields metadata. Each item of the array corresponds
                to one of the fields returned by the [\"Upload a dataset file\"](#/paths/~1datasets/post)
                route.
                "
              items:
                allOf:
                  - type: object
                    properties:
                      name:
                        type: string
                      type:
                        description: "
                        The selected field. There is some structure of what a
                        fields type can be based on its suggested type from
                        the [\"Upload a dataset file\"](#/paths/~1datasets/post)
                        route. The type can be anything that is equal to or lower
                        to the recommended type on the following list:

                        - number

                        - datetime

                        - category

                        - class

                        - text


                        **Example:** If the field was suggested the **category**
                        type, it can be any of the **category**, **class**, or
                        **text** types.

                        **Suggestion:** Set the field type to the suggested ones
                        provided by the [\"Upload a dataset file\"](#/paths/~1datasets/post)
                        route.
                        "
                  - $ref: "#/components/schemas/Field"
                  - required:
                    - name
                    - type
                    - included

          required:
            - name
            - parameters
            - fields
      required:
        - dataset

    Field:
      type: object
      description: "The field metadata."
      properties:
        name:
          type: string
          example: "field"
          description: "The field name."

        type:
          type: string
          enum: ["number", "text", "class", "category", "datetime"]
          example: "text"
          description: "The field type."

        included:
          type: boolean
          default: true
          description: "
            True, if the field should be included into the dataset analysis.
            Otherwise, False.
            "


    # =============================================
    # DATASET SCHEMAS
    # =============================================

    Dataset:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          description: "The dataset ID."

        type:
          type: string
          default: "dataset"
          description: "The dataset type."

        name:
          type: string
          example: "Secret Data"
          description: "The dataset name."

        description:
          type: string
          nullable: true
          example: "The dataset containing the secret information."
          description: "The dataset description."

        nDocuments:
          type: integer
          nullable: true
          example: 42000
          default: null
          description: "The number of documents in the dataset."

        created:
          type: string
          format: date-time
          example: "2021-01-19"
          description: "The dataset creation date."

        status:
          type: string
          enum: ["IN_QUEUE", "LOADING", "FINISHED", "ERROR"]
          example: "FINISHED"
          default: "IN_QUEUE"
          description: "The status of the dataset creation."

        group:
          type: string
          nullable: true
          default: null
          description: "In which group the dataset belongs to."

        order:
          type: integer
          nullable: true
          default: null
          description: "The order of the dataset in the group."

    # =============================================
    # SUBSET SCHEMAS
    # =============================================

    Subset:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 0
          example: 4
          description: "The subset ID."

        type:
          type: string
          default: "subset"
          description: "The subset type."

        label:
          type: string
          example: "Secret Subset"
          description: "The subset label."

        description:
          type: string
          nullable: true
          example: null
          description: "The subset description."

        resultedIn:
          type: integer
          format: int32
          minimum: 0
          nullable: true
          example: 3
          description: "
            The method ID that generated the subset. If the subset the \"root\"
            subset, this value will be `null`.
          "

        usedBy:
          type: array
          items:
            type: integer
            format: int32
            minimum: 0
          example: [4, 5, 6]
          description: "The array of method IDs that used the subset in the analysis."

        nDocuments:
          type: integer
          format: int32
          minimum: 0
          example: 1300
          description: "The number of documents in the subset."

        modified:
          type: boolean
          default: false
          description: "
            True, if the subset was modified since it was first created. Otherwise, False.
          "
        metadata:
          type: object
          nullable: true
          example: null
          description: "Additional subset metadata."



    # =============================================
    # METHOD SCHEMAS
    # =============================================

    MethodBase:
      type: object
      properties:
        produced:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
          minItems: 1
          example: [3, 4]
          description: "The array of subset IDs the method generated."
        appliedOn:
          type: integer
          format: int32


